;(function($){
	function Carousel($elem,options){
		this.$elem=$elem;
		this.$carouselItem=this.$elem.find('.carousel-item');
		this.$btns=this.$elem.find('.btns');
		this.$btnsItem=this.$elem.find('.btns-item');
		this.$controls=this.$elem.find('.control');
		this.options=options;
		this.now=this.options.defaultImg;
		this.timer=null;
		this.init();
	};
	Carousel.prototype={
		constructor:Carousel,
		init:function(){
			var _self=this;
			this.$elem.trigger('carousel-show',[this.now,this.$carouselItem[this.now]]);
			this.$btnsItem.eq(this.options.defaultImg).addClass('btns-active');
			this.$elem.hover(this.showControl.bind(this),this.hideControl.bind(this));			
			if(this.options.slide){//滑动
				this.$elem.addClass('slide');
				this.$carouselItem.eq(this.options.defaultImg).css({left:0});
				this.$carouselItem.on('move',function(ev){
					if(_self.now!=$(this).index()){
						_self.$elem.trigger('carousel-show',[$(this).index(),this]);
					}
				});
				this.$elemWidth=this.$elem.width();
				this.$carouselItem.move({Js:true});
				this.$controls.eq(1).on('click',function(ev){
					ev.stopPropagation();
					this.slide(this.now+1,1);//右击左滑，
				}.bind(this));
				this.$controls.eq(0).on('click',function(){
					this.slide(this.now-1,-1);//左击右滑
				}.bind(this));
				this.$elem.on('click','.btns-item',function(){
					_self.slide($(this).index());
				});				
			}else{//淡入模式
				this.$elem.addClass('fade');
				this.$carouselItem.showHide(this.options);
				this.$carouselItem.eq(this.options.defaultImg).showHide('show');	
				this.$carouselItem.on('show',function(ev){
					_self.$elem.trigger('carousel-show',[$(this).index(),this]);
				})
				this.$controls.eq(1).on('click',function(ev){
					ev.stopPropagation();//需要阻止冒泡，防止冒泡到上级元素
					this.fade(this.now+1)//注意，函数里面不能用this.now++的形式
				}.bind(this));
				this.$controls.eq(0).on('click',function(){
					this.fade(this.now-1)//注意，函数里面不能用this.now++的形式
				}.bind(this));
				this.$elem.on('click','.btns-item',function(){
					_self.tab($(this).index());
				});
			};
			if(this.options.autoPlay){
				this.autoPlay();
				this.$elem.hover(this.pause.bind(this),this.autoPlay.bind(this))					
			}			
		},
		showControl:function(){
			this.$controls.show();
		},
		hideControl:function(){
			this.$controls.hide();
		},
		slide:function(index,direction){
			index=this.getCorrectIndex(index);
			if(!direction){
				if(index>this.now){
					direction=1;
				}else{
					direction=-1;
				}				
			};
			if(this.now==index) return ;
			this.$carouselItem.eq(index).css({left:direction*(this.$elemWidth)});
			this.$carouselItem.eq(this.now).move('x',-1*direction*(this.$elemWidth));
			this.$carouselItem.eq(index).move('x',0);
			this.$btnsItem.eq(this.now).removeClass('btns-active');
			this.now=index;
			this.$btnsItem.eq(this.now).addClass('btns-active');
		},
		fade:function(index){
			index=this.getCorrectIndex(index);
			this.tab(index);
		},
		getCorrectIndex:function(index){
			if(index>this.$carouselItem.length-1){
				index=0;
			};
			if(index<0){
				index=this.$carouselItem.length-1;
			};
			return index;
		},
		tab:function(index){
			if(this.now==index) return ;
			this.$carouselItem.eq(this.now).showHide('hide');
			this.$carouselItem.eq(index).showHide('show');
			this.$btnsItem.eq(index).addClass('btns-active');
			this.$btnsItem.eq(this.now).removeClass('btns-active');
			this.now=index;
		},
		autoPlay:function(){
			this.timer=setInterval(function(){
				this.$controls.eq(1).trigger('click');
			}.bind(this),this.options.autoPlayTime);
		},
		pause:function(){
			clearInterval(this.timer);
		}
	};
	Carousel.DEFAULTS={
		js:true,
		mode:'fade',
		slide:true,
		defaultImg:0,
		autoPlay:false,
		autoPlayTime:1000
	};
	$.fn.extend({
		carousel:function(options){
			this.each(function(){
				var $this=$(this);		
				var carousel=$this.data('carousel');
				if(!carousel){//单例
					options=$.extend(Carousel.DEFAULTS,options);
					carousel=new Carousel($this,options);
					$this.data('carousel',carousel);
				}//暴露内部方法
				if(typeof carousel[options] == 'function'){
					carousel[options]($this); 
				}
			});
			return this;
		}
	});
})(jQuery)